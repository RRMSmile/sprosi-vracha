#!/usr/bin/env bash
set -e

START_TIME=$(date +%s)
DATE=$(date '+%Y-%m-%d %H:%M:%S')
echo "üöÄ [Sprosi-Vracha] –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è..."

# === 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
if [ ! -f "/opt/sprosi-vracha-ai/.env" ]; then
  echo "‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–π—Ç–µ /opt/sprosi-vracha-ai/.env –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º."
  exit 1
fi
source /opt/sprosi-vracha-ai/.env

# === 2. –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–∞ ===
echo "üì¶ –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–∞..."
cd /opt/sprosi-vracha/frontend
npm ci --silent
npm run build --silent

# === 3. –î–µ–ø–ª–æ–π —Å—Ç–∞—Ç–∏–∫–∏ ===
echo "üì§ –î–µ–ø–ª–æ–π –≤ /var/www/sprosi-vracha..."
mkdir -p /var/www/sprosi-vracha
rsync -a --delete out/ /var/www/sprosi-vracha/
nginx -t && systemctl reload nginx

# === 4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ sitemap ===
echo "üó∫  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è sitemap..."
node /opt/sprosi-vracha-ai/apps/ai-sitemap/ai-sitemap.js || echo "‚ö†Ô∏è  Sitemap –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω"

# === 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Ä–µ—Å—Ç–∞—Ä—Ç —Å–µ—Ä–≤–∏—Å–æ–≤ ===
echo "üîÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ AI-—Å–µ—Ä–≤–∏—Å–æ–≤..."
active_count=0
total_count=0
for svc in $(systemctl list-units --type=service --no-pager | grep ai- | awk '{print $1}'); do
  total_count=$((total_count+1))
  if systemctl is-active --quiet "$svc"; then
    active_count=$((active_count+1))
  fi
done

# === 6. –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ ===
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
mkdir -p /opt/sprosi-vracha-ai/backups
BACKUP_FILE="/opt/sprosi-vracha-ai/backups/site-$(date +%F_%H%M).tar.gz"
tar -czf "$BACKUP_FILE" /var/www/sprosi-vracha > /dev/null 2>&1
BACKUP_SIZE=$(du -h "$BACKUP_FILE" | awk '{print $1}')
echo "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω (${BACKUP_SIZE})"

# === 7. Git-—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è ===
cd /opt/sprosi-vracha-ai
git add -A
git commit -m "auto-deploy: ${DATE}" >/dev/null 2>&1 || true
git push origin main >/dev/null 2>&1 || true

# === 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞ ===
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞..."
START_PING=$(date +%s%3N)
HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://sprosi-vracha.com || echo "000")
END_PING=$(date +%s%3N)
RESPONSE_TIME_MS=$((END_PING - START_PING))

# === 9. –ü–æ–¥—Å—á—ë—Ç —Å—Ç–∞—Ç–µ–π ===
ARTICLE_COUNT=$(find /opt/sprosi-vracha-ai/data/articles -type f -name "*.md" 2>/dev/null | wc -l)

# === 10. –û—à–∏–±–∫–∏ –∑–∞ —Å—É—Ç–∫–∏ (ai-error-watcher.log) ===
ERROR_LOG="/opt/sprosi-vracha-ai/apps/ai-error-watcher/errors.log"
ERRORS_24H=0
if [ -f "$ERROR_LOG" ]; then
  ERRORS_24H=$(grep -c "$(date --date='-1 day' '+%Y-%m-%d')" "$ERROR_LOG" || echo 0)
fi

# === 11. –°–∏—Å—Ç–µ–º–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ ===
CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | awk '{print 100 - $8 "%"}')
RAM_USAGE=$(free -m | awk '/Mem:/ {printf "%dMB/%dMB (%.1f%%)", $3, $2, $3/$2*100}')

# === 12. Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ===
END_TIME=$(date +%s)
BUILD_TIME=$((END_TIME - START_TIME))
BUILD_TIME_STR=$(printf "%d –º–∏–Ω %02d —Å–µ–∫" $((BUILD_TIME/60)) $((BUILD_TIME%60)))

if [ -n "$TG_TOKEN" ] && [ -n "$TG_CHAT" ]; then
  STATUS_ICON="‚ö†Ô∏è"
  STATUS_TEXT="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∞–π—Ç"
  if [ "$HTTP_CODE" = "200" ]; then
    STATUS_ICON="‚úÖ"
    STATUS_TEXT="–°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω (${RESPONSE_TIME_MS} –º—Å)"
  fi

  MESSAGE="${STATUS_ICON} *Sprosi-Vracha –æ–±–Ω–æ–≤–ª—ë–Ω!*%0Aüïí ${DATE}%0AüìÑ –°—Ç–∞—Ç–µ–π: ${ARTICLE_COUNT}%0Aüß© –ê–∫—Ç–∏–≤–Ω—ã–µ –º–æ–¥—É–ª–∏: ${active_count}/${total_count}%0Aüíæ –ë—ç–∫–∞–ø: ${BACKUP_SIZE}%0A‚öôÔ∏è –í—Ä–µ–º—è —Å–±–æ—Ä–∫–∏: ${BUILD_TIME_STR}%0Aüî• CPU: ${CPU_USAGE}%0Aüß† RAM: ${RAM_USAGE}%0A‚ùóÔ∏è–û—à–∏–±–æ–∫ –∑–∞ 24—á: ${ERRORS_24H}%0Aüåê ${STATUS_TEXT}%0Aüëâ [sprosi-vracha.com](https://sprosi-vracha.com)"
  curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
    -d "chat_id=${TG_CHAT}" \
    -d "text=${MESSAGE}" \
    -d "parse_mode=Markdown" >/dev/null 2>&1 && \
  echo "üì® Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
else
  echo "‚ö†Ô∏è  Telegram —Ç–æ–∫–µ–Ω –∏–ª–∏ chat_id –Ω–µ –∑–∞–¥–∞–Ω—ã"
fi

# === 13. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ ===
echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω: ${DATE}"

