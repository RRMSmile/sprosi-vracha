import fs from "fs";
import { execSync } from "child_process";

const LOG = "/opt/sprosi-vracha-ai/apps/ai-maintenance/ai-maintenance.log";
const BACKUP_DIR = "/opt/sprosi-vracha-ai/backups";
const LOG_ROOT = "/opt/sprosi-vracha-ai/logs";

function log(msg) {
  const line = `[${new Date().toISOString()}] ${msg}`;
  console.log(line);
  fs.appendFileSync(LOG, line + "\n");
}

function cleanOldBackups() {
  log("üßπ –û—á–∏—Å—Ç–∫–∞ –±—ç–∫–∞–ø–æ–≤ —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π...");
  execSync(`find ${BACKUP_DIR} -type f -mtime +7 -delete || true`);
}

function cleanLogs() {
  log("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ —Å—Ç–∞—Ä—à–µ 14 –¥–Ω–µ–π...");
  execSync(`find ${LOG_ROOT} -type f -mtime +14 -delete || true`);
}

function cleanNpmCache() {
  log("üßº –û—á–∏—Å—Ç–∫–∞ npm cache...");
  execSync("npm cache clean --force", { stdio: "ignore" });
}

log("ü™Ñ –ó–∞–ø—É—Å–∫ AI Maintenance...");
try {
  cleanOldBackups();
  cleanLogs();
  cleanNpmCache();
  log("‚úÖ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ.");
} catch (e) {
  log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏: ${e.message}`);
}
