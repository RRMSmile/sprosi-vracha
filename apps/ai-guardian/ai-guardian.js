import fs from "fs";
import { execSync } from "child_process";

const LOG = "/opt/sprosi-vracha-ai/apps/ai-guardian/logs/ai-guardian.log";
const ALERT_FILE = "/opt/sprosi-vracha-ai/apps/ai-guardian/alerts.json";
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || "";
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID || "";

function log(msg) {
  const line = `[${new Date().toISOString()}] ${msg}`;
  console.log(line);
  fs.appendFileSync(LOG, line + "\n");
}

function run(cmd) {
  try {
    return execSync(cmd, { encoding: "utf8" }).trim();
  } catch {
    return "";
  }
}

function sendTelegram(msg) {
  if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) return;
  try {
    execSync(
      `curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" -d chat_id="${TELEGRAM_CHAT_ID}" -d text="${msg}"`
    );
    log("üì® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram");
  } catch (e) {
    log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: ${e.message}`);
  }
}

function checkAuthLog() {
  const suspicious = run("grep 'Failed password' /var/log/auth.log | tail -n 10");
  if (suspicious) {
    const count = suspicious.split("\n").length;
    log(`üö® –ù–∞–π–¥–µ–Ω–æ ${count} –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞ —Å –æ—à–∏–±–∫–æ–π`);
    sendTelegram(`üö® AI-Guardian: –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã ${count} –Ω–µ—É–¥–∞—á–Ω—ã–µ –≤—Ö–æ–¥—ã –≤ SSH`);
  }
}

function checkRootChanges() {
  const changes = run("find /root -type f -mtime -1 2>/dev/null | grep -v '.log$' | head -n 10");
  if (changes) {
    log("‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ /root –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á");
    sendTelegram(`‚ö†Ô∏è AI-Guardian: –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ /root:\n${changes}`);
  }
}

function checkOpenPorts() {
  const ports = run("ss -tuln | grep LISTEN | grep -v '22' | grep -v '443' | grep -v '80' || true");
  if (ports) {
    log("üïµÔ∏è –ù–∞–π–¥–µ–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã");
    sendTelegram(`üïµÔ∏è AI-Guardian: –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã:\n${ports}`);
  }
}

function checkFileIntegrity() {
  const base = "/etc/passwd";
  const hashFile = "/opt/sprosi-vracha-ai/apps/ai-guardian/.passwd.hash";
  const hash = run(`sha256sum ${base} | awk '{print $1}'`);
  if (!fs.existsSync(hashFile)) fs.writeFileSync(hashFile, hash);
  const prev = fs.readFileSync(hashFile, "utf8").trim();
  if (hash !== prev) {
    log("üö® –§–∞–π–ª /etc/passwd –∏–∑–º–µ–Ω—ë–Ω!");
    sendTelegram("üö® AI-Guardian: —Ñ–∞–π–ª /etc/passwd –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω ‚Äî –ø—Ä–æ–≤–µ—Ä—å —Å–∏—Å—Ç–µ–º—É!");
    fs.writeFileSync(hashFile, hash);
  }
}

function main() {
  log("üõ°Ô∏è –ó–∞–ø—É—Å–∫ AI-Guardian...");
  checkAuthLog();
  checkRootChanges();
  checkOpenPorts();
  checkFileIntegrity();
  log("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
}

main();
