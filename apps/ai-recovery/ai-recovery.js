import fs from "fs";
import { execSync } from "child_process";

const LOG = "/opt/sprosi-vracha-ai/apps/ai-recovery/logs/recovery.log";
const TELEGRAM_TOKEN = "YOUR_TELEGRAM_BOT_TOKEN";
const CHAT_ID = "YOUR_CHAT_ID";

function log(msg) {
  const line = `[${new Date().toISOString()}] ${msg}`;
  console.log(line);
  fs.appendFileSync(LOG, line + "\n");
}

function run(cmd) {
  try {
    return execSync(cmd, { encoding: "utf8" }).trim();
  } catch (e) {
    log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã: ${cmd} ‚Üí ${e.message}`);
    return "";
  }
}

function sendTelegram(message) {
  try {
    run(
      `curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" -d chat_id="${CHAT_ID}" -d text="${message}"`
    );
    log("üì® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram");
  } catch (e) {
    log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: ${e.message}`);
  }
}

function healSystem() {
  log("ü©∫ –ó–∞–ø—É—Å–∫ AI-Recovery v2...");
  const issues = [];

  // —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–π–º–µ—Ä—ã, –∞ –Ω–µ —Å–µ—Ä–≤–∏—Å—ã
  const timers = [
    "ai-content-pipeline.timer",
    "ai-auto-publisher.timer",
    "ai-error-watcher.timer",
    "ai-healthcheck.timer",
    "ai-link-reporter.timer",
    "ai-summary-reporter.timer",
    "ai-telegram-reporter.timer",
    "ai-content-orchestrator.timer"
  ];

  for (const t of timers) {
    const state = run(`systemctl is-active ${t}`);
    if (state !== "active") {
      issues.push(t);
      run(`systemctl restart ${t}`);
      log(`‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω: ${t}`);
    } else {
      log(`‚úÖ ${t} —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`);
    }
  }

  // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ PM2 –ø—Ä–∏ –∑–∞–≤–∏—Å–∞–Ω–∏—è—Ö
  const pm2 = run("pm2 list || true");
  if (pm2.includes("errored") || pm2.includes("stopped")) {
    run("pm2 restart all");
    log("‚ôªÔ∏è PM2 –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω");
  }

  // –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  run("npm cache clean --force");
  run("rm -rf /tmp/* /var/tmp/*");
  log("üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");

  if (issues.length > 0) {
    sendTelegram(
      `üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:\n${issues.join("\n")}\n–°–∏—Å—Ç–µ–º–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.`
    );
  } else {
    log("‚úÖ –í—Å–µ —Ç–∞–π–º–µ—Ä—ã –∞–∫—Ç–∏–≤–Ω—ã, –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è");
  }

  log("üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —Å–∞–º–æ–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ.");
}

healSystem();
