name: Deploy Sprosivracha Frontend to Beget

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Build & Deploy via SSH
    runs-on: ubuntu-latest

    steps:
      # 1) –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Node.js + –∫–µ—à npm (—É—Å–∫–æ—Ä—è–µ—Ç —Å–±–æ—Ä–∫—É)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Setup npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      # 3) –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ —Å–±–æ—Ä–∫–∞ —Å—Ç–∞—Ç–∏–∫–∏
      - name: Install dependencies
        run: npm ci
      - name: Build Next.js static site
        run: npm run build

      # 4) –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH-–¥–æ—Å—Ç—É–ø–∞ –∫ Beget
      - name: Check SSH connection to Beget
        run: |
          echo "${{ secrets.BEGET_SSH_KEY }}" > id_ed25519
          chmod 600 id_ed25519
          ssh -i id_ed25519 -o StrictHostKeyChecking=no \
            ${{ secrets.BEGET_USER }}@${{ secrets.BEGET_HOST }} \
            "echo '‚úÖ SSH connection to Beget successful'"

      # 5) –ú–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è —Å—Ç–∞—Ç–∏–∫–∏ (JS/CSS/HTML) –ø–µ—Ä–µ–¥ –∑–∞–ª–∏–≤–∫–æ–π
      - name: Optimize static output
        run: |
          npm i -g minify
          find out -type f \( -name "*.js" -o -name "*.css" -o -name "*.html" \) -print0 \
            | xargs -0 -I{} sh -c 'minify "{}" > "{}.tmp" && mv "{}.tmp" "{}"'

      # 6) –î–µ–ø–ª–æ–π –Ω–∞ Beget (–æ—á–∏—Å—Ç–∫–∞ –∏ –∑–∞–ª–∏–≤–∫–∞)
      - name: Deploy to Beget via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.BEGET_HOST }}
          username: ${{ secrets.BEGET_USER }}
          key: ${{ secrets.BEGET_SSH_KEY }}
          source: "out/*"
          target: "/home/e/${{ secrets.BEGET_USER }}/data/www/sprosi-vracha.com/"
          strip_components: 0
          overwrite: true
          rm: true

      # 7) Health-check —Å–∞–π—Ç–∞
      - name: Verify website is online
        run: |
          sleep 5
          curl -Is https://sprosi-vracha.com | head -n 1

      # 8) –ü–∏–Ω–≥—É–µ–º –ø–æ–∏—Å–∫–æ–≤–∏–∫–∏ (—É—Å–∫–æ—Ä—è–µ–º –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é)
      - name: Ping search engines
        run: |
          curl -s "https://www.google.com/ping?sitemap=https://sprosi-vracha.com/sitemap.xml" || true
          curl -s "https://yandex.ru/ping?sitemap=https://sprosi-vracha.com/sitemap.xml" || true

      # 9) (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) Lighthouse –∞—É–¥–∏—Ç ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç—á—ë—Ç –∫–∞–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
      - name: Run Lighthouse audit
        if: always()
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://sprosi-vracha.com
          uploadArtifacts: true
          temporaryPublicStorage: true

      # 10) –ß–∏—Å—Ç–∏–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —Å —Ä–∞–Ω–Ω–µ—Ä–∞
      - name: Cleanup SSH key
        if: always()
        run: rm -f id_ed25519

      # 11) –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
      - name: Notify Telegram
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.SSL_BOT_CHAT_ID }}
          token: ${{ secrets.SSL_BOT_TOKEN }}
          message: |
            ${{ job.status == 'success' && '‚úÖ' || '‚ùå' }} *Deploy ${ job.status == 'success' && '—É—Å–ø–µ—à–µ–Ω' || '—Å –æ—à–∏–±–∫–∞–º–∏' }*
            üåê https://sprosi-vracha.com
            üß© Commit: `${{ github.sha }}`
            üåø Branch: `${{ github.ref_name }}`
            üïí At: ${{ github.event.head_commit.timestamp }}

      # 12) (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) Cloudflare purge ‚Äî —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –∏ –¥–æ–±–∞–≤—å —Å–µ–∫—Ä–µ—Ç—ã CF_API_TOKEN –∏ CF_ZONE_ID
      # - name: Purge Cloudflare cache
      #   if: success()
      #   run: |
      #     curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE_ID }}/purge_cache" \
      #       -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
      #       -H "Content-Type: application/json" \
      #       --data '{"purge_everything":true}'
