name: üöÄ Deploy Sprosivracha Frontend to Beget + SEO Audit + Telegram Notify

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build & Deploy via SSH
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Node.js –æ–∫—Ä—É–∂–µ–Ω–∏–µ
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ –ö–µ—à npm
      - name: Setup npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      - name: Install dependencies
        run: npm ci

      # 5Ô∏è‚É£ –°–±–æ—Ä–∫–∞ Next.js (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —ç–∫—Å–ø–æ—Ä—Ç)
      - name: Build Next.js static site
        run: npm run build && npm run export

      # 6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Beget
      - name: Check SSH connection to Beget
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.BEGET_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh -o StrictHostKeyChecking=no ${{ secrets.BEGET_USER }}@${{ secrets.BEGET_HOST }} "echo ‚úÖ SSH connection OK"

      # 7Ô∏è‚É£ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç–∏–∫–∏
      - name: Optimize static output
        run: |
          npm i -g minify
          find out -type f -name "*.js" -o -name "*.css" | while read f; do
            minify "$f" > "$f.min" && mv "$f.min" "$f"
          done

      # 8Ô∏è‚É£ –î–µ–ø–ª–æ–π –Ω–∞ Beget
      - name: Deploy to Beget via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.BEGET_HOST }}
          username: ${{ secrets.BEGET_USER }}
          key: ${{ secrets.BEGET_SSH_KEY }}
          source: "out/*"
          target: "/home/e/${{ secrets.BEGET_USER }}/data/www/sprosi-vracha.com"

      # 9Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞
      - name: Verify website is online
        run: |
          curl -I https://sprosi-vracha.com

      # üîü Lighthouse SEO-–∞—É–¥–∏—Ç
      - name: Run Lighthouse audit
        if: always()
        continue-on-error: true
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://sprosi-vracha.com
          uploadArtifacts: false
          temporaryPublicStorage: true

      # 1Ô∏è‚É£1Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á—ë—Ç–∞ Lighthouse
      - name: Save Lighthouse report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: .lighthouseci/

      # 1Ô∏è‚É£2Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ SSH –∫–ª—é—á–µ–π (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)
      - name: Cleanup SSH key
        if: always()
        run: rm -rf ~/.ssh

      # 1Ô∏è‚É£3Ô∏è‚É£ Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
      - name: Notify Telegram
        if: always()
        run: |
          STATUS="${{ job.status }}"
          if [ "$STATUS" == "success" ]; then
            MSG="‚úÖ *Deploy completed for* [sprosi-vracha.com](https://sprosi-vracha.com)%0A\
üîπ Branch: \`${{ github.ref_name }}\`%0A\
üîπ Commit: \`${{ github.sha }}\`%0A\
üïí $(date '+%Y-%m-%d %H:%M:%S %Z')"
          else
            MSG="‚ùå *–û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è!*%0A–ü—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏ GitHub Actions.%0A\
üîπ Branch: \`${{ github.ref_name }}\`%0A\
üîπ Commit: \`${{ github.sha }}\`"
          fi
          curl -s -X POST https://api.telegram.org/bot${{ secrets.SSL_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.SSL_BOT_CHAT_ID }} \
            -d parse_mode="Markdown" \
            -d text="$MSG"

